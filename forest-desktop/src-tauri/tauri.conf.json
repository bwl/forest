{
  "$schema": "https://schema.tauri.app/config/2.0",
  "productName": "Forest",
  "version": "0.4.5",
  "identifier": "com.ettio.forest.desktop",
  "build": {
    "beforeBuildCommand": "scripts/build-cli.sh && bun run build",
    "beforeDevCommand": "bun run dev",
    "devUrl": "http://localhost:5173",
    "frontendDist": "../dist"
  },
  "bundle": {
    "active": true,
    "category": "DeveloperTool",
    "copyright": "Copyright (c) 2025 Ettio",
    "targets": "all",
    "icon": [
      "icons/32x32.png",
      "icons/128x128.png",
      "icons/128x128@2x.png",
      "icons/icon.icns",
      "icons/icon.ico"
    ],
    "externalBin": [
      "binaries/forest",
      "binaries/forest-embed"
    ],
    "resources": [
      "resources/completions"
    ],
    "windows": {
      "certificateThumbprint": null,
      "digestAlgorithm": "sha256",
      "timestampUrl": ""
    },
    "macOS": {
      "frameworks": [],
      "minimumSystemVersion": "10.13"
    }
  },
  "app": {
    "windows": [
      {
        "title": "Forest",
        "width": 1200,
        "height": 800,
        "resizable": true,
        "fullscreen": false,
        "minWidth": 800,
        "minHeight": 600,
        "transparent": false,
        "decorations": true,
        "shadow": true
      }
    ],
    "security": {
      "csp": null
    },
    "withGlobalTauri": false
  },
  "plugins": {
    "cli": {
      "description": "Forest knowledge base - graph-native note capture and linking",
      "longDescription": "Forest is a CLI and GUI tool for capturing unstructured ideas and automatically linking them using hybrid semantic and lexical scoring.",
      "args": [],
      "subcommands": {
        "stats": {
          "description": "Show graph statistics (nodes, edges, tags, degree distribution)",
          "args": [
            {
              "name": "json",
              "description": "Output JSON format",
              "takesValue": false,
              "short": "j"
            },
            {
              "name": "top",
              "description": "Number of top items to show",
              "takesValue": true,
              "short": "t"
            }
          ]
        },
        "capture": {
          "description": "Create a new note and auto-link into the graph",
          "args": [
            {
              "name": "title",
              "description": "Note title",
              "takesValue": true
            },
            {
              "name": "body",
              "description": "Note body text",
              "takesValue": true
            },
            {
              "name": "stdin",
              "description": "Read body from stdin",
              "takesValue": false
            },
            {
              "name": "file",
              "description": "Read body from file",
              "takesValue": true
            },
            {
              "name": "tags",
              "description": "Comma-separated tags (overrides auto-extraction)",
              "takesValue": true
            },
            {
              "name": "auto-link",
              "description": "Auto-link to existing nodes (default: true)",
              "takesValue": false
            },
            {
              "name": "no-auto-link",
              "description": "Disable auto-linking",
              "takesValue": false
            }
          ]
        },
        "search": {
          "description": "Semantic search using embeddings",
          "args": [
            {
              "name": "query",
              "description": "Search query",
              "takesValue": true,
              "required": true,
              "index": 1
            },
            {
              "name": "limit",
              "description": "Maximum number of results",
              "takesValue": true,
              "short": "n"
            }
          ]
        },
        "node": {
          "description": "Node operations",
          "subcommands": {
            "read": {
              "description": "Display node content",
              "args": [
                {
                  "name": "id",
                  "description": "Node ID or reference",
                  "takesValue": true,
                  "required": true,
                  "index": 1
                }
              ]
            },
            "delete": {
              "description": "Delete a node",
              "args": [
                {
                  "name": "id",
                  "description": "Node ID",
                  "takesValue": true,
                  "required": true,
                  "index": 1
                },
                {
                  "name": "force",
                  "description": "Skip confirmation prompt",
                  "takesValue": false,
                  "short": "f"
                }
              ]
            },
            "edit": {
              "description": "Edit node in $EDITOR",
              "args": [
                {
                  "name": "id",
                  "description": "Node ID",
                  "takesValue": true,
                  "required": true,
                  "index": 1
                }
              ]
            },
            "link": {
              "description": "Manually link two nodes",
              "args": [
                {
                  "name": "id1",
                  "description": "First node ID",
                  "takesValue": true,
                  "required": true,
                  "index": 1
                },
                {
                  "name": "id2",
                  "description": "Second node ID",
                  "takesValue": true,
                  "required": true,
                  "index": 2
                }
              ]
            }
          }
        },
        "health": {
          "description": "System health check (database, embeddings)"
        },
        "edges": {
          "description": "Edge management",
          "subcommands": {
            "propose": {
              "description": "List suggested edges"
            },
            "accept": {
              "description": "Accept a suggested edge",
              "args": [
                {
                  "name": "id",
                  "description": "Edge ID",
                  "takesValue": true,
                  "required": true,
                  "index": 1
                }
              ]
            },
            "reject": {
              "description": "Reject a suggested edge",
              "args": [
                {
                  "name": "id",
                  "description": "Edge ID",
                  "takesValue": true,
                  "required": true,
                  "index": 1
                }
              ]
            }
          }
        }
      }
    },
    "sql": {
      "preload": [
        "sqlite:forest.db"
      ]
    }
  }
}
