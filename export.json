{
  "nodes": [
    {
      "id": "715edecc-753c-40ed-b24b-be34f7ef5da3",
      "title": "First idea",
      "tags": [
        "graphs",
        "notes"
      ],
      "body": "This is a seed idea with #graph and #notes tags.",
      "tokenCounts": {
        "first": 1,
        "idea": 2,
        "seed": 1,
        "#graph": 1,
        "#note": 1,
        "tags": 1
      },
      "createdAt": "2025-10-18T13:34:15.920Z",
      "updatedAt": "2025-10-18T20:42:39.995Z"
    },
    {
      "id": "e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "title": "Second graph thought",
      "tags": [
        "graphs"
      ],
      "body": "Thinking about graph traversals and #graph context to keep related notes nearby.",
      "tokenCounts": {
        "second": 1,
        "graph": 2,
        "thought": 1,
        "thinking": 1,
        "about": 1,
        "traversal": 1,
        "#graph": 1,
        "context": 1,
        "keep": 1,
        "related": 1,
        "note": 1,
        "nearby": 1
      },
      "createdAt": "2025-10-18T13:34:20.500Z",
      "updatedAt": "2025-10-18T20:42:39.999Z"
    },
    {
      "id": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "title": "Graph context aggregator",
      "tags": [
        "graphs",
        "context"
      ],
      "body": "Aggregate graph-based notes to give agents context. #graph #context",
      "tokenCounts": {
        "graph": 2,
        "context": 2,
        "aggregator": 1,
        "aggregate": 1,
        "note": 1,
        "give": 1,
        "agent": 1,
        "#graph": 1,
        "#context": 1
      },
      "createdAt": "2025-10-18T13:34:38.411Z",
      "updatedAt": "2025-10-18T20:42:40.000Z"
    },
    {
      "id": "72dd9220-f6d2-4047-8de6-50db1fbbb44c",
      "title": "Notes about context",
      "tags": [
        "graphs"
      ],
      "body": "This note explores context windows for agents and how #graph knowledge trims context overflow.",
      "tokenCounts": {
        "note": 2,
        "about": 1,
        "context": 3,
        "explore": 1,
        "window": 1,
        "agent": 1,
        "how": 1,
        "#graph": 1,
        "knowledge": 1,
        "trim": 1,
        "overflow": 1
      },
      "createdAt": "2025-10-18T13:34:55.247Z",
      "updatedAt": "2025-10-18T20:42:40.000Z"
    },
    {
      "id": "5826a944-e126-4aa5-9edd-8116f15601c7",
      "title": "Agent journaling routine",
      "tags": [
        "journal",
        "agents"
      ],
      "body": "Daily dumping of partially formed ideas so agents can discover patterns later. Includes prompts for #journal #agents and follow-up questions.",
      "tokenCounts": {
        "agent": 2,
        "journaling": 1,
        "routine": 1,
        "daily": 1,
        "dumping": 1,
        "partially": 1,
        "formed": 1,
        "idea": 1,
        "so": 1,
        "can": 1,
        "discover": 1,
        "pattern": 1,
        "later": 1,
        "prompt": 1,
        "#journal": 1,
        "#agent": 1,
        "follow": 1,
        "up": 1,
        "question": 1
      },
      "createdAt": "2025-10-18T15:12:31.625Z",
      "updatedAt": "2025-10-18T18:15:10.690Z"
    },
    {
      "id": "4a3c0515-fceb-4b77-a9e2-faedb03e999b",
      "title": "Idea triage rubric",
      "tags": [
        "triage",
        "workflow"
      ],
      "body": "Have the CLI ask three questions: novelty, urgency, and dependencies. Tag everything with #triage #workflow to make query slices easy.",
      "tokenCounts": {
        "idea": 1,
        "triage": 1,
        "rubric": 1,
        "have": 1,
        "cli": 1,
        "ask": 1,
        "three": 1,
        "question": 1,
        "novelty": 1,
        "urgency": 1,
        "dependency": 1,
        "tag": 1,
        "everything": 1,
        "#triage": 1,
        "#workflow": 1,
        "make": 1,
        "query": 1,
        "slice": 1,
        "easy": 1
      },
      "createdAt": "2025-10-18T15:12:33.905Z",
      "updatedAt": "2025-10-18T18:15:10.691Z"
    },
    {
      "id": "b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "title": "Graph hygiene checklist",
      "tags": [
        "graphs"
      ],
      "body": "Weekly maintenance pass keeps the knowledge graph healthy: orphan detection, re-score stale edges, run #graph metrics, surface dead tags.",
      "tokenCounts": {
        "graph": 2,
        "hygiene": 1,
        "checklist": 1,
        "weekly": 1,
        "maintenance": 1,
        "pass": 1,
        "keep": 1,
        "knowledge": 1,
        "healthy": 1,
        "orphan": 1,
        "detection": 1,
        "re": 1,
        "score": 1,
        "stale": 1,
        "edge": 1,
        "run": 1,
        "#graph": 1,
        "metric": 1,
        "surface": 1,
        "dead": 1,
        "tags": 1
      },
      "createdAt": "2025-10-18T15:12:36.623Z",
      "updatedAt": "2025-10-18T20:42:40.000Z"
    },
    {
      "id": "e12b0f41-f9a2-45ff-8051-041898bfaf3a",
      "title": "Notebook import sketch",
      "tags": [
        "import",
        "markdown"
      ],
      "body": "Rough plan for importing existing Markdown dumps: parse frontmatter tags, normalize to CLI schema, auto-link via #import #markdown pass.",
      "tokenCounts": {
        "notebook": 1,
        "import": 1,
        "sketch": 1,
        "rough": 1,
        "plan": 1,
        "importing": 1,
        "existing": 1,
        "markdown": 1,
        "dump": 1,
        "parse": 1,
        "frontmatter": 1,
        "tags": 1,
        "normalize": 1,
        "cli": 1,
        "schema": 1,
        "auto": 1,
        "link": 1,
        "via": 1,
        "#import": 1,
        "#markdown": 1,
        "pass": 1
      },
      "createdAt": "2025-10-18T15:12:38.947Z",
      "updatedAt": "2025-10-18T18:15:10.691Z"
    },
    {
      "id": "8d122297-fab5-4087-b5cf-d2135f6ec547",
      "title": "Context slice heuristics",
      "tags": [
        "context"
      ],
      "body": "When agents request context, limit neighborhoods by theme tag density, recency, and #context saturation so we never overwhelm them.",
      "tokenCounts": {
        "context": 2,
        "slice": 1,
        "heuristic": 1,
        "when": 1,
        "agent": 1,
        "request": 1,
        "limit": 1,
        "neighborhood": 1,
        "theme": 1,
        "tag": 1,
        "density": 1,
        "recency": 1,
        "#context": 1,
        "saturation": 1,
        "so": 1,
        "never": 1,
        "overwhelm": 1,
        "them": 1
      },
      "createdAt": "2025-10-18T15:12:41.744Z",
      "updatedAt": "2025-10-18T18:15:10.691Z"
    },
    {
      "id": "5c200fa7-aa46-4bc6-86af-69fc00ef8a82",
      "title": "LLM assist prompts",
      "tags": [
        "agents",
        "prompting"
      ],
      "body": "Catalog prompts to ask agents when a new idea lands: request summarization, link suggestions, action items. Tag with #agents #prompting to reuse.",
      "tokenCounts": {
        "llm": 1,
        "assist": 1,
        "prompt": 2,
        "catalog": 1,
        "ask": 1,
        "agent": 1,
        "when": 1,
        "new": 1,
        "idea": 1,
        "land": 1,
        "request": 1,
        "summarization": 1,
        "link": 1,
        "suggestion": 1,
        "action": 1,
        "item": 1,
        "tag": 1,
        "#agent": 1,
        "#prompting": 1,
        "reuse": 1
      },
      "createdAt": "2025-10-18T15:12:44.363Z",
      "updatedAt": "2025-10-18T18:15:10.692Z"
    },
    {
      "id": "688f6a86-eaa9-408b-8c57-28ed8607a572",
      "title": "Execution backlog view",
      "tags": [
        "workflow",
        "urgency"
      ],
      "body": "Generate an execution board that highlights ideas tagged #workflow + #urgency with direct graph neighbors that unblock them.",
      "tokenCounts": {
        "execution": 2,
        "backlog": 1,
        "view": 1,
        "generate": 1,
        "board": 1,
        "highlight": 1,
        "idea": 1,
        "tagged": 1,
        "#workflow": 1,
        "#urgency": 1,
        "direct": 1,
        "graph": 1,
        "neighbor": 1,
        "unblock": 1,
        "them": 1
      },
      "createdAt": "2025-10-18T15:12:46.901Z",
      "updatedAt": "2025-10-18T18:15:10.692Z"
    },
    {
      "id": "c94809ee-4d02-4be6-a556-86f7a49a13d7",
      "title": "Agent onboarding script",
      "tags": [
        "graphs"
      ],
      "body": "Script that walks a new agent through the vault: query #graph neighborhood, rehearse top tags, confirm it knows how to call context endpoints.",
      "tokenCounts": {
        "agent": 2,
        "onboarding": 1,
        "script": 2,
        "walk": 1,
        "new": 1,
        "through": 1,
        "vault": 1,
        "query": 1,
        "#graph": 1,
        "neighborhood": 1,
        "rehearse": 1,
        "top": 1,
        "tags": 1,
        "confirm": 1,
        "know": 1,
        "how": 1,
        "call": 1,
        "context": 1,
        "endpoint": 1
      },
      "createdAt": "2025-10-18T15:12:50.818Z",
      "updatedAt": "2025-10-18T20:42:40.001Z"
    },
    {
      "id": "7178ccee-21a6-4179-94b5-03281b04f4da",
      "title": "Context caching plan",
      "tags": [
        "context"
      ],
      "body": "Cache frequent query slices in a local store keyed by tag bundles so agents get instant #context without rebuilding graphs.",
      "tokenCounts": {
        "context": 1,
        "caching": 1,
        "plan": 1,
        "cache": 1,
        "frequent": 1,
        "query": 1,
        "slice": 1,
        "local": 1,
        "store": 1,
        "keyed": 1,
        "tag": 1,
        "bundle": 1,
        "so": 1,
        "agent": 1,
        "get": 1,
        "instant": 1,
        "#context": 1,
        "without": 1,
        "rebuilding": 1,
        "graph": 1
      },
      "createdAt": "2025-10-18T15:12:53.065Z",
      "updatedAt": "2025-10-18T18:15:10.692Z"
    },
    {
      "id": "5a31df67-80f2-4744-b464-07ff6ec88d25",
      "title": "Context stitching daemon",
      "tags": [
        "affected",
        "background",
        "cache",
        "capture",
        "context"
      ],
      "body": "Background process that precomputes popular neighborhoods and pins them in a cache table. Should monitor capture events, recalculate affected nodes, and expose freshness metrics for doctor.",
      "tokenCounts": {
        "context": 1,
        "stitching": 1,
        "daemon": 1,
        "background": 1,
        "process": 1,
        "precompute": 1,
        "popular": 1,
        "neighborhood": 1,
        "pins": 1,
        "them": 1,
        "cache": 1,
        "table": 1,
        "monitor": 1,
        "capture": 1,
        "event": 1,
        "recalculate": 1,
        "affected": 1,
        "node": 1,
        "expose": 1,
        "freshness": 1,
        "metric": 1,
        "doctor": 1
      },
      "createdAt": "2025-10-18T18:07:21.166Z",
      "updatedAt": "2025-10-18T18:15:10.700Z"
    },
    {
      "id": "abd4f425-ba02-4c80-980b-3776a9610ff0",
      "title": "Idea backlog sync plan",
      "tags": [
        "add",
        "backlog",
        "cadence",
        "captured",
        "date"
      ],
      "body": "Weekly review cadence for the knowledge graph that reconciles captured nodes with external planning tools. Should add metadata hooks for project tags, owner, and revisit date.",
      "tokenCounts": {
        "idea": 1,
        "backlog": 1,
        "sync": 1,
        "plan": 1,
        "weekly": 1,
        "review": 1,
        "cadence": 1,
        "knowledge": 1,
        "graph": 1,
        "reconcile": 1,
        "captured": 1,
        "node": 1,
        "external": 1,
        "planning": 1,
        "tool": 1,
        "add": 1,
        "metadata": 1,
        "hook": 1,
        "project": 1,
        "tags": 1,
        "owner": 1,
        "revisit": 1,
        "date": 1
      },
      "createdAt": "2025-10-18T18:07:24.535Z",
      "updatedAt": "2025-10-18T18:15:10.700Z"
    },
    {
      "id": "34e5b7b1-47cf-4656-886d-9d9b6e04c4f2",
      "title": "CLI help autopopulation",
      "tags": [
        "autopopulation",
        "cli",
        "command",
        "commander",
        "config"
      ],
      "body": "Generate command reference content from the current Commander config and write out markdown tables. Should integrate with docs pipeline and flag missing descriptions.",
      "tokenCounts": {
        "cli": 1,
        "help": 1,
        "autopopulation": 1,
        "generate": 1,
        "command": 1,
        "reference": 1,
        "content": 1,
        "from": 1,
        "current": 1,
        "commander": 1,
        "config": 1,
        "write": 1,
        "out": 1,
        "markdown": 1,
        "table": 1,
        "integrate": 1,
        "docs": 1,
        "pipeline": 1,
        "flag": 1,
        "missing": 1,
        "description": 1
      },
      "createdAt": "2025-10-18T18:07:28.214Z",
      "updatedAt": "2025-10-18T18:15:10.701Z"
    },
    {
      "id": "a1285ed7-9d23-4eba-966b-a86ea81e913c",
      "title": "Graph pruning heuristics",
      "tags": [
        "aging",
        "confidence",
        "decay",
        "define",
        "edge"
      ],
      "body": "Define thresholds for aging out low-confidence edges and orphaned nodes. Include decay based on last updated timestamp and usage frequency within explore queries.",
      "tokenCounts": {
        "graph": 1,
        "pruning": 1,
        "heuristic": 1,
        "define": 1,
        "threshold": 1,
        "aging": 1,
        "out": 1,
        "low": 1,
        "confidence": 1,
        "edge": 1,
        "orphaned": 1,
        "node": 1,
        "decay": 1,
        "last": 1,
        "updated": 1,
        "timestamp": 1,
        "usage": 1,
        "frequency": 1,
        "within": 1,
        "explore": 1,
        "query": 1
      },
      "createdAt": "2025-10-18T18:07:30.778Z",
      "updatedAt": "2025-10-18T18:15:10.701Z"
    },
    {
      "id": "1a2ae2e0-d2af-43f2-b64f-72335bc5cab4",
      "title": "Tag suggestion tuner",
      "tags": [
        "suggestion",
        "tag",
        "accepted",
        "calibrate",
        "capture"
      ],
      "body": "Track tag co-occurrence statistics and surface suggestions during capture. Calibrate using historical accepted edges and expose configuration in metadata table.",
      "tokenCounts": {
        "tag": 2,
        "suggestion": 2,
        "tuner": 1,
        "track": 1,
        "co": 1,
        "occurrence": 1,
        "statistic": 1,
        "surface": 1,
        "during": 1,
        "capture": 1,
        "calibrate": 1,
        "historical": 1,
        "accepted": 1,
        "edge": 1,
        "expose": 1,
        "configuration": 1,
        "metadata": 1,
        "table": 1
      },
      "createdAt": "2025-10-18T18:07:33.024Z",
      "updatedAt": "2025-10-18T18:15:10.701Z"
    },
    {
      "id": "61185aad-2031-41a9-9944-f1d7f51a3624",
      "title": "Onboarding template library",
      "tags": [
        "capture",
        "checklist",
        "doctor",
        "edge",
        "example"
      ],
      "body": "Starter set of nodes and edges that explain how to use Forest. Should include capture examples, explore walkthroughs, and doctor triage checklists.",
      "tokenCounts": {
        "onboarding": 1,
        "template": 1,
        "library": 1,
        "starter": 1,
        "set": 1,
        "node": 1,
        "edge": 1,
        "explain": 1,
        "how": 1,
        "forest": 1,
        "capture": 1,
        "example": 1,
        "explore": 1,
        "walkthrough": 1,
        "doctor": 1,
        "triage": 1,
        "checklist": 1
      },
      "createdAt": "2025-10-18T18:07:35.175Z",
      "updatedAt": "2025-10-18T18:15:10.702Z"
    },
    {
      "id": "6b46833c-58b7-48b2-80ce-52402c92ef46",
      "title": "Agent evaluation journal",
      "tags": [
        "agent",
        "acceptance",
        "action",
        "connect",
        "covering"
      ],
      "body": "Daily record of agent responses, prompt variants, and follow-up actions. Should connect to nodes covering scoring rubrics and insight acceptance logs.",
      "tokenCounts": {
        "agent": 2,
        "evaluation": 1,
        "journal": 1,
        "daily": 1,
        "record": 1,
        "response": 1,
        "prompt": 1,
        "variant": 1,
        "follow": 1,
        "up": 1,
        "action": 1,
        "connect": 1,
        "node": 1,
        "covering": 1,
        "scoring": 1,
        "rubric": 1,
        "insight": 1,
        "acceptance": 1,
        "logs": 1
      },
      "createdAt": "2025-10-18T18:07:37.361Z",
      "updatedAt": "2025-10-18T18:15:10.702Z"
    },
    {
      "id": "d70ecc96-e473-4d3c-bf03-9e2d0cfd7d05",
      "title": "Prompt library taxonomy",
      "tags": [
        "agent",
        "automation",
        "category",
        "establish",
        "guidance"
      ],
      "body": "Establish categories and tags for reusable prompting patterns. Include guidance for agents, humans, and automation, plus links to successful transcripts.",
      "tokenCounts": {
        "prompt": 1,
        "library": 1,
        "taxonomy": 1,
        "establish": 1,
        "category": 1,
        "tags": 1,
        "reusable": 1,
        "prompting": 1,
        "pattern": 1,
        "guidance": 1,
        "agent": 1,
        "human": 1,
        "automation": 1,
        "plus": 1,
        "link": 1,
        "successful": 1,
        "transcript": 1
      },
      "createdAt": "2025-10-18T18:07:40.003Z",
      "updatedAt": "2025-10-18T18:15:10.702Z"
    },
    {
      "id": "0838723d-8aad-490b-ae6e-d1de6f25e7d2",
      "title": "Edge confidence decay",
      "tags": [
        "decay",
        "coefficient",
        "confidence",
        "doctor",
        "during"
      ],
      "body": "Introduce time-based decay for suggestion scores so stale relationships surface for review. Store decay coefficients in metadata and refresh during doctor runs.",
      "tokenCounts": {
        "edge": 1,
        "confidence": 1,
        "decay": 3,
        "introduce": 1,
        "time": 1,
        "suggestion": 1,
        "score": 1,
        "so": 1,
        "stale": 1,
        "relationship": 1,
        "surface": 1,
        "review": 1,
        "store": 1,
        "coefficient": 1,
        "metadata": 1,
        "refresh": 1,
        "during": 1,
        "doctor": 1,
        "runs": 1
      },
      "createdAt": "2025-10-18T18:07:42.519Z",
      "updatedAt": "2025-10-18T18:15:10.702Z"
    },
    {
      "id": "fb1d5402-4174-4157-b75e-586616db8bcb",
      "title": "Search relevance tuning",
      "tags": [
        "search",
        "against",
        "blend",
        "bm25",
        "capture"
      ],
      "body": "Experiment with hybrid search strategy that blends BM25 with embedding similarity. Evaluate against explore queries and capture confirmation flows.",
      "tokenCounts": {
        "search": 2,
        "relevance": 1,
        "tuning": 1,
        "experiment": 1,
        "hybrid": 1,
        "strategy": 1,
        "blend": 1,
        "bm25": 1,
        "embedding": 1,
        "similarity": 1,
        "evaluate": 1,
        "against": 1,
        "explore": 1,
        "query": 1,
        "capture": 1,
        "confirmation": 1,
        "flow": 1
      },
      "createdAt": "2025-10-18T18:07:44.665Z",
      "updatedAt": "2025-10-18T18:15:10.703Z"
    },
    {
      "id": "0822078e-bdb4-4ce0-9892-385156651402",
      "title": "Graph session replay journal",
      "tags": [
        "session",
        "were",
        "which",
        "can",
        "capture"
      ],
      "body": "Archive the raw chat transcripts from agent-assisted capture sessions, annotate every action with timestamps, and stitch the replay back into the graph as an audit trail. Outline how session playback can show which suggestions were accepted, which were rejected, and which follow-up prompts were issued. Include guidance on masking sensitive snippets before storage and link to the insights that originated from the session. Describe how a diff view between initial capture and final node can be rendered for human review.",
      "tokenCounts": {
        "graph": 2,
        "session": 4,
        "replay": 2,
        "journal": 1,
        "archive": 1,
        "raw": 1,
        "chat": 1,
        "transcript": 1,
        "from": 2,
        "agent": 1,
        "assisted": 1,
        "capture": 2,
        "annotate": 1,
        "every": 1,
        "action": 1,
        "timestamp": 1,
        "stitch": 1,
        "back": 1,
        "audit": 1,
        "trail": 1,
        "outline": 1,
        "how": 2,
        "playback": 1,
        "can": 2,
        "show": 1,
        "which": 3,
        "suggestion": 1,
        "were": 3,
        "accepted": 1,
        "rejected": 1,
        "follow": 1,
        "up": 1,
        "prompt": 1,
        "issued": 1,
        "guidance": 1,
        "masking": 1,
        "sensitive": 1,
        "snippet": 1,
        "before": 1,
        "storage": 1,
        "link": 1,
        "insight": 1,
        "originated": 1,
        "describe": 1,
        "diff": 1,
        "view": 1,
        "between": 1,
        "initial": 1,
        "final": 1,
        "node": 1,
        "rendered": 1,
        "human": 1,
        "review": 1
      },
      "createdAt": "2025-10-18T19:36:31.969Z",
      "updatedAt": "2025-10-18T19:36:31.972Z"
    },
    {
      "id": "6261bd2f-c80d-4887-af72-831dff10cc2a",
      "title": "Longform agent briefing template",
      "tags": [
        "agent",
        "briefing",
        "mission",
        "node",
        "section"
      ],
      "body": "Draft a template for multi-day agent briefings that includes mission context, timeline, stakeholders, success criteria, and escalation paths. Detail how each section maps to graph nodes so the briefing stays synchronized with the knowledge base. Provide example narratives for onboarding a new agent to the Forest CLI, complete with recommended prompts and failure recovery scripts. Add a section about recording decisions after every working session and linking the outcomes back to the original mission node.",
      "tokenCounts": {
        "longform": 1,
        "agent": 3,
        "briefing": 3,
        "template": 2,
        "draft": 1,
        "multi": 1,
        "day": 1,
        "mission": 2,
        "context": 1,
        "timeline": 1,
        "stakeholder": 1,
        "success": 1,
        "criteria": 1,
        "escalation": 1,
        "path": 1,
        "detail": 1,
        "how": 1,
        "each": 1,
        "section": 2,
        "maps": 1,
        "graph": 1,
        "node": 2,
        "so": 1,
        "stay": 1,
        "synchronized": 1,
        "knowledge": 1,
        "base": 1,
        "provide": 1,
        "example": 1,
        "narrative": 1,
        "onboarding": 1,
        "new": 1,
        "forest": 1,
        "cli": 1,
        "complete": 1,
        "recommended": 1,
        "prompt": 1,
        "failure": 1,
        "recovery": 1,
        "script": 1,
        "add": 1,
        "about": 1,
        "recording": 1,
        "decision": 1,
        "after": 1,
        "every": 1,
        "working": 1,
        "session": 1,
        "linking": 1,
        "outcome": 1,
        "back": 1,
        "original": 1
      },
      "createdAt": "2025-10-18T19:36:37.108Z",
      "updatedAt": "2025-10-18T19:36:37.108Z"
    },
    {
      "id": "41e0fff4-204a-4be8-aeb8-d20ad4bdc471",
      "title": "Research ops weekly digest",
      "tags": [
        "digest",
        "node",
        "graphs",
        "research",
        "week"
      ],
      "body": "Curate a weekly digest targeted at research operations leads that summarizes captured insights, accepted graph edges, and outstanding suggestions. Include trend analysis that explains how the graph has evolved over the week, the most referenced nodes, and any tags that have spiked in activity. Provide a checklist for verifying data freshness, auditing stale nodes, and scheduling doctor reviews. Close the digest with a call to action for the upcoming week, referencing specific nodes that need human follow-up or additional captures.",
      "tokenCounts": {
        "research": 2,
        "ops": 1,
        "weekly": 2,
        "digest": 3,
        "curate": 1,
        "targeted": 1,
        "operation": 1,
        "lead": 1,
        "summarize": 1,
        "captured": 1,
        "insight": 1,
        "accepted": 1,
        "graph": 2,
        "edge": 1,
        "outstanding": 1,
        "suggestion": 1,
        "trend": 1,
        "analysis": 1,
        "explain": 1,
        "how": 1,
        "has": 1,
        "evolved": 1,
        "over": 1,
        "week": 2,
        "most": 1,
        "referenced": 1,
        "node": 3,
        "any": 1,
        "tags": 1,
        "have": 1,
        "spiked": 1,
        "activity": 1,
        "provide": 1,
        "checklist": 1,
        "verifying": 1,
        "data": 1,
        "freshness": 1,
        "auditing": 1,
        "stale": 1,
        "scheduling": 1,
        "doctor": 1,
        "review": 1,
        "close": 1,
        "call": 1,
        "action": 1,
        "upcoming": 1,
        "referencing": 1,
        "specific": 1,
        "need": 1,
        "human": 1,
        "follow": 1,
        "up": 1,
        "additional": 1,
        "capture": 1
      },
      "createdAt": "2025-10-18T19:36:43.226Z",
      "updatedAt": "2025-10-18T20:42:40.001Z"
    },
    {
      "id": "cefafca8-30f6-40cc-be7a-9e90f4037472",
      "title": "Agent apprenticeship playbook",
      "tags": [
        "agent",
        "apprenticeship",
        "operator",
        "step",
        "ability"
      ],
      "body": "Document a step-by-step apprenticeship program for new agents that pairs them with experienced operators. Outline orientation modules, shadowing sessions, and practical assignments that involve curating graph nodes, resolving suggestions, and drafting capture summaries. Provide rubrics for evaluating progression at each milestone, including comprehension of the CLI surface, ability to triage insights, and communication skills during handoffs. Conclude with guidance for promoting apprentices to full operators, with links to ceremony checklists and graduation templates.",
      "tokenCounts": {
        "agent": 2,
        "apprenticeship": 2,
        "playbook": 1,
        "document": 1,
        "step": 2,
        "program": 1,
        "new": 1,
        "pair": 1,
        "them": 1,
        "experienced": 1,
        "operator": 2,
        "outline": 1,
        "orientation": 1,
        "module": 1,
        "shadowing": 1,
        "session": 1,
        "practical": 1,
        "assignment": 1,
        "involve": 1,
        "curating": 1,
        "graph": 1,
        "node": 1,
        "resolving": 1,
        "suggestion": 1,
        "drafting": 1,
        "capture": 1,
        "summary": 1,
        "provide": 1,
        "rubric": 1,
        "evaluating": 1,
        "progression": 1,
        "each": 1,
        "milestone": 1,
        "comprehension": 1,
        "cli": 1,
        "surface": 1,
        "ability": 1,
        "triage": 1,
        "insight": 1,
        "communication": 1,
        "skill": 1,
        "during": 1,
        "handoff": 1,
        "conclude": 1,
        "guidance": 1,
        "promoting": 1,
        "apprentice": 1,
        "full": 1,
        "link": 1,
        "ceremony": 1,
        "checklist": 1,
        "graduation": 1,
        "template": 1
      },
      "createdAt": "2025-10-18T19:36:49.483Z",
      "updatedAt": "2025-10-18T19:36:49.484Z"
    },
    {
      "id": "fade7a51-c8a6-4b8d-a757-f773cf5d5f9d",
      "title": "Notebook ingestion QA protocol",
      "tags": [
        "notebook",
        "protocol",
        "along",
        "assurance",
        "automated"
      ],
      "body": "Establish a quality assurance protocol for importing large notebooks into the Forest graph. Describe pre-flight validation steps, such as verifying metadata completeness, checking for forbidden tags, and ensuring body length thresholds. Provide sampling strategies for manual review, outlining how to compare imported content with the source material and log discrepancies. Include escalation paths for broken links or malformed markdown, along with automated reports that summarize QA outcomes for the week.",
      "tokenCounts": {
        "notebook": 2,
        "ingestion": 1,
        "qa": 2,
        "protocol": 2,
        "establish": 1,
        "quality": 1,
        "assurance": 1,
        "importing": 1,
        "large": 1,
        "forest": 1,
        "graph": 1,
        "describe": 1,
        "pre": 1,
        "flight": 1,
        "validation": 1,
        "step": 1,
        "verifying": 1,
        "metadata": 1,
        "completeness": 1,
        "checking": 1,
        "forbidden": 1,
        "tags": 1,
        "ensuring": 1,
        "body": 1,
        "length": 1,
        "threshold": 1,
        "provide": 1,
        "sampling": 1,
        "strategy": 1,
        "manual": 1,
        "review": 1,
        "outlining": 1,
        "how": 1,
        "compare": 1,
        "imported": 1,
        "content": 1,
        "source": 1,
        "material": 1,
        "log": 1,
        "discrepancy": 1,
        "escalation": 1,
        "path": 1,
        "broken": 1,
        "link": 1,
        "malformed": 1,
        "markdown": 1,
        "along": 1,
        "automated": 1,
        "report": 1,
        "summarize": 1,
        "outcome": 1,
        "week": 1
      },
      "createdAt": "2025-10-18T19:36:53.631Z",
      "updatedAt": "2025-10-18T19:36:53.631Z"
    },
    {
      "id": "1d136445-9d58-4be4-b377-4b06bfdc8f0f",
      "title": "Context cache incident report",
      "tags": [
        "incident",
        "report",
        "cache",
        "context",
        "analysis"
      ],
      "body": "Write a detailed incident report template for failures in the context cache layer. Capture the timeline of degraded service, metrics impacted, and specific nodes that lost freshness. Provide sections for root-cause analysis, remediation steps, and lessons learned, each populated with example text that illustrates the expected level of detail. Specify how to link the report back into the graph so future explorers can trace the lineage from the incident to follow-up improvements.",
      "tokenCounts": {
        "context": 2,
        "cache": 2,
        "incident": 3,
        "report": 3,
        "write": 1,
        "detailed": 1,
        "template": 1,
        "failure": 1,
        "layer": 1,
        "capture": 1,
        "timeline": 1,
        "degraded": 1,
        "service": 1,
        "metric": 1,
        "impacted": 1,
        "specific": 1,
        "node": 1,
        "lost": 1,
        "freshness": 1,
        "provide": 1,
        "section": 1,
        "root": 1,
        "cause": 1,
        "analysis": 1,
        "remediation": 1,
        "step": 1,
        "lesson": 1,
        "learned": 1,
        "each": 1,
        "populated": 1,
        "example": 1,
        "text": 1,
        "illustrate": 1,
        "expected": 1,
        "level": 1,
        "detail": 1,
        "specify": 1,
        "how": 1,
        "link": 1,
        "back": 1,
        "graph": 1,
        "so": 1,
        "future": 1,
        "explorer": 1,
        "can": 1,
        "trace": 1,
        "lineage": 1,
        "from": 1,
        "follow": 1,
        "up": 1,
        "improvement": 1
      },
      "createdAt": "2025-10-18T19:36:58.675Z",
      "updatedAt": "2025-10-18T19:36:58.676Z"
    },
    {
      "id": "3cb2066a-c3b6-4d8c-b931-77e6abf0c055",
      "title": "Graph hygiene sprint charter",
      "tags": [
        "sprint",
        "charter",
        "graphs",
        "hygiene",
        "metric"
      ],
      "body": "Define a sprint charter dedicated to graph hygiene, outlining goals, scope, and success metrics for a two-week cleanup initiative. Detail the backlog of tasks such as pruning stale edges, renaming ambiguous nodes, and modernizing tags across high-degree clusters. Provide stakeholder roles, including a sprint lead, QA partner, and documentation steward, each with daily responsibilities. Add guidance for publishing a closing report that enumerates before/after metrics and links to every node touched during the sprint.",
      "tokenCounts": {
        "graph": 2,
        "hygiene": 2,
        "sprint": 4,
        "charter": 2,
        "define": 1,
        "dedicated": 1,
        "outlining": 1,
        "goal": 1,
        "scope": 1,
        "success": 1,
        "metric": 2,
        "two": 1,
        "week": 1,
        "cleanup": 1,
        "initiative": 1,
        "detail": 1,
        "backlog": 1,
        "task": 1,
        "pruning": 1,
        "stale": 1,
        "edge": 1,
        "renaming": 1,
        "ambiguous": 1,
        "node": 2,
        "modernizing": 1,
        "tags": 1,
        "across": 1,
        "high": 1,
        "degree": 1,
        "cluster": 1,
        "provide": 1,
        "stakeholder": 1,
        "role": 1,
        "lead": 1,
        "qa": 1,
        "partner": 1,
        "documentation": 1,
        "steward": 1,
        "each": 1,
        "daily": 1,
        "responsibility": 1,
        "add": 1,
        "guidance": 1,
        "publishing": 1,
        "closing": 1,
        "report": 1,
        "enumerate": 1,
        "before": 1,
        "after": 1,
        "link": 1,
        "every": 1,
        "touched": 1,
        "during": 1
      },
      "createdAt": "2025-10-18T19:37:03.749Z",
      "updatedAt": "2025-10-18T20:42:40.001Z"
    },
    {
      "id": "5db1268c-e388-43a7-a2da-a9b67c4cf31b",
      "title": "Agent reflection workbook",
      "tags": [
        "workbook",
        "agent",
        "reflection",
        "what",
        "add"
      ],
      "body": "Create a reflection workbook that agents complete at the end of every major project. Include prompts for summarizing what went well, what friction surfaced, and which nodes were most valuable. Provide sections for linking evidence, attaching transcripts, and flagging knowledge gaps that should trigger new captures. Add a final checklist that routes the completed workbook into the graph, updates relevant tags, and schedules a follow-up review with the doctor command.",
      "tokenCounts": {
        "agent": 2,
        "reflection": 2,
        "workbook": 3,
        "create": 1,
        "complete": 1,
        "end": 1,
        "every": 1,
        "major": 1,
        "project": 1,
        "prompt": 1,
        "summarizing": 1,
        "what": 2,
        "went": 1,
        "well": 1,
        "friction": 1,
        "surfaced": 1,
        "which": 1,
        "node": 1,
        "were": 1,
        "most": 1,
        "valuable": 1,
        "provide": 1,
        "section": 1,
        "linking": 1,
        "evidence": 1,
        "attaching": 1,
        "transcript": 1,
        "flagging": 1,
        "knowledge": 1,
        "gaps": 1,
        "trigger": 1,
        "new": 1,
        "capture": 1,
        "add": 1,
        "final": 1,
        "checklist": 1,
        "route": 1,
        "completed": 1,
        "graph": 1,
        "update": 1,
        "relevant": 1,
        "tags": 1,
        "schedule": 1,
        "follow": 1,
        "up": 1,
        "review": 1,
        "doctor": 1,
        "command": 1
      },
      "createdAt": "2025-10-18T19:37:10.225Z",
      "updatedAt": "2025-10-18T19:37:10.225Z"
    },
    {
      "id": "72d522c9-e0e3-4b4a-bd0f-053804c7751d",
      "title": "Workspace taxonomy audit",
      "tags": [
        "audit",
        "taxonomy",
        "workspace",
        "agenda",
        "agent"
      ],
      "body": "Lay out a comprehensive audit procedure for the workspace taxonomy that classifies every captured idea. Describe how to export tag frequency reports, cluster related nodes, and identify overlapping concepts that should merge. Provide sample SQL snippets and CLI invocations that drive the audit, plus a checklist for updating documentation once changes ship. Emphasize collaboration between agents and human editors, including a review meeting agenda and follow-up questionnaire.",
      "tokenCounts": {
        "workspace": 2,
        "taxonomy": 2,
        "audit": 3,
        "lay": 1,
        "out": 1,
        "comprehensive": 1,
        "procedure": 1,
        "classify": 1,
        "every": 1,
        "captured": 1,
        "idea": 1,
        "describe": 1,
        "how": 1,
        "export": 1,
        "tag": 1,
        "frequency": 1,
        "report": 1,
        "cluster": 1,
        "related": 1,
        "node": 1,
        "identify": 1,
        "overlapping": 1,
        "concept": 1,
        "merge": 1,
        "provide": 1,
        "sample": 1,
        "sql": 1,
        "snippet": 1,
        "cli": 1,
        "invocation": 1,
        "drive": 1,
        "plus": 1,
        "checklist": 1,
        "updating": 1,
        "documentation": 1,
        "once": 1,
        "change": 1,
        "ship": 1,
        "emphasize": 1,
        "collaboration": 1,
        "between": 1,
        "agent": 1,
        "human": 1,
        "editor": 1,
        "review": 1,
        "meeting": 1,
        "agenda": 1,
        "follow": 1,
        "up": 1,
        "questionnaire": 1
      },
      "createdAt": "2025-10-18T19:37:15.441Z",
      "updatedAt": "2025-10-18T19:37:15.442Z"
    },
    {
      "id": "638a739a-aa9c-432b-9018-afbf6fb53f2c",
      "title": "Multi-agent retrospection summit",
      "tags": [
        "summit",
        "agent",
        "from",
        "retrospection",
        "action"
      ],
      "body": "Design the format for a quarterly retrospection summit that gathers all agents and stakeholders. Include agenda blocks for reviewing mission outcomes, showcasing successful capture workflows, and dissecting failed experiments. Provide instructions for assembling pre-read packets directly from the graph, highlighting nodes with high activity and unresolved suggestions. Close with an action-tracking framework that ensures commitments from the summit translate into captured follow-up tasks and updated tags.",
      "tokenCounts": {
        "multi": 1,
        "agent": 2,
        "retrospection": 2,
        "summit": 3,
        "design": 1,
        "format": 1,
        "quarterly": 1,
        "gather": 1,
        "all": 1,
        "stakeholder": 1,
        "agenda": 1,
        "block": 1,
        "reviewing": 1,
        "mission": 1,
        "outcome": 1,
        "showcasing": 1,
        "successful": 1,
        "capture": 1,
        "workflow": 1,
        "dissecting": 1,
        "failed": 1,
        "experiment": 1,
        "provide": 1,
        "instruction": 1,
        "assembling": 1,
        "pre": 1,
        "read": 1,
        "packet": 1,
        "directly": 1,
        "from": 2,
        "graph": 1,
        "highlighting": 1,
        "node": 1,
        "high": 1,
        "activity": 1,
        "unresolved": 1,
        "suggestion": 1,
        "close": 1,
        "action": 1,
        "tracking": 1,
        "framework": 1,
        "ensure": 1,
        "commitment": 1,
        "translate": 1,
        "captured": 1,
        "follow": 1,
        "up": 1,
        "task": 1,
        "updated": 1,
        "tags": 1
      },
      "createdAt": "2025-10-18T19:37:20.045Z",
      "updatedAt": "2025-10-18T19:37:20.045Z"
    },
    {
      "id": "69d5f575-5678-4b6d-83cb-838902a175a8",
      "title": "Context management operating manual",
      "tags": [
        "agent",
        "context",
        "graphs",
        "degree",
        "18t19"
      ],
      "body": "Compose an operating manual that explains how context is harvested, cached, refreshed, and distributed across the Forest knowledge graph. Begin with an overview of the lifecycle: initial capture, scoring, edge promotion, and downstream consumption by agents. Break down the responsibilities of the context manager role, including running forest doctor\nNodes: 33\nAccepted edges: 19\nSuggested edges: 35\n\nRecent captures:\n  638a739a  Multi-agent retrospection summit  (updated 2025-10-18T19:37:20.045Z)\n  72d522c9  Workspace taxonomy audit  (updated 2025-10-18T19:37:15.442Z)\n  5db1268c  Agent reflection workbook  (updated 2025-10-18T19:37:10.225Z)\n  3cb2066a  Graph hygiene sprint charter  (updated 2025-10-18T19:37:03.750Z)\n  1d136445  Context cache incident report  (updated 2025-10-18T19:36:58.676Z)\n\nHigh-degree nodes:\n  9b7faf2d  Graph context aggregator  (degree 6)\n  72dd9220  Notes about context  (degree 5)\n  b82e4d51  Graph hygiene checklist  (degree 5)\n  c94809ee  Agent onboarding script  (degree 5)\n  e70f6e2c  Second graph thought  (degree 4)\n\nTop suggestions:\n   1. 3cb2066a::b82e4d51  score=0.28  Graph hygiene sprint charter ↔ Graph hygiene checklist\n   2. 638a739a::6b46833c  score=0.23  Multi-agent retrospection summit ↔ Agent evaluation journal\n   3. 5db1268c::6261bd2f  score=0.23  Agent reflection workbook ↔ Longform agent briefing template\n   4. 1d136445::5a31df67  score=0.23  Context cache incident report ↔ Context stitching daemon\n   5. 5db1268c::6b46833c  score=0.20  Agent reflection workbook ↔ Agent evaluation journal\n\nNext steps:\n  - Run `forest insights list` to triage pending links.\n  - Capture new ideas with `forest capture`., reconciling high-priority suggestions, and coordinating with teams who rely on hot paths. Provide detailed playbooks for three recurring scenarios: an agent requests deeper historical context, a new project spins up with missing tags, and an incident drains cache freshness. For each scenario, document the investigative steps, CLI commands to run, and criteria for success. Add appendices that cover capacity planning, schema migration checklists, and a glossary of context-specific tags so the manual can serve as a long-term reference.",
      "tokenCounts": {
        "10": 6,
        "15": 1,
        "19": 1,
        "20": 2,
        "23": 3,
        "28": 1,
        "33": 1,
        "35": 1,
        "36": 1,
        "37": 4,
        "58": 1,
        "2025": 5,
        "context": 10,
        "management": 1,
        "operating": 2,
        "manual": 3,
        "compose": 1,
        "explain": 1,
        "how": 1,
        "harvested": 1,
        "cached": 1,
        "refreshed": 1,
        "distributed": 1,
        "across": 1,
        "forest": 4,
        "knowledge": 1,
        "graph": 7,
        "begin": 1,
        "overview": 1,
        "lifecycle": 1,
        "initial": 1,
        "capture": 4,
        "scoring": 1,
        "edge": 3,
        "promotion": 1,
        "downstream": 1,
        "consumption": 1,
        "agent": 11,
        "break": 1,
        "down": 1,
        "responsibility": 1,
        "manager": 1,
        "role": 1,
        "running": 1,
        "doctor": 1,
        "node": 2,
        "accepted": 1,
        "suggested": 1,
        "recent": 1,
        "638a739a": 2,
        "multi": 2,
        "retrospection": 2,
        "summit": 2,
        "updated": 5,
        "18t19": 5,
        "045z": 1,
        "72d522c9": 1,
        "workspace": 1,
        "taxonomy": 1,
        "audit": 1,
        "442z": 1,
        "5db1268c": 3,
        "reflection": 3,
        "workbook": 3,
        "225z": 1,
        "3cb2066a": 2,
        "hygiene": 4,
        "sprint": 2,
        "charter": 2,
        "03": 1,
        "750z": 1,
        "1d136445": 2,
        "cache": 3,
        "incident": 3,
        "report": 2,
        "676z": 1,
        "high": 2,
        "degree": 6,
        "9b7faf2d": 1,
        "aggregator": 1,
        "72dd9220": 1,
        "note": 1,
        "about": 1,
        "b82e4d51": 2,
        "checklist": 3,
        "c94809ee": 1,
        "onboarding": 1,
        "script": 1,
        "e70f6e2c": 1,
        "second": 1,
        "thought": 1,
        "top": 1,
        "suggestion": 2,
        "score": 5,
        "6b46833c": 2,
        "evaluation": 2,
        "journal": 2,
        "6261bd2f": 1,
        "longform": 1,
        "briefing": 1,
        "template": 1,
        "5a31df67": 1,
        "stitching": 1,
        "daemon": 1,
        "next": 1,
        "step": 2,
        "run": 2,
        "insight": 1,
        "list": 1,
        "triage": 1,
        "pending": 1,
        "link": 1,
        "new": 2,
        "idea": 1,
        "reconciling": 1,
        "priority": 1,
        "coordinating": 1,
        "team": 1,
        "who": 1,
        "rely": 1,
        "hot": 1,
        "path": 1,
        "provide": 1,
        "detailed": 1,
        "playbook": 1,
        "three": 1,
        "recurring": 1,
        "scenario": 2,
        "request": 1,
        "deeper": 1,
        "historical": 1,
        "project": 1,
        "spin": 1,
        "up": 1,
        "missing": 1,
        "tags": 2,
        "drain": 1,
        "freshness": 1,
        "each": 1,
        "document": 1,
        "investigative": 1,
        "cli": 1,
        "command": 1,
        "criteria": 1,
        "success": 1,
        "add": 1,
        "appendice": 1,
        "cover": 1,
        "capacity": 1,
        "planning": 1,
        "schema": 1,
        "migration": 1,
        "glossary": 1,
        "specific": 1,
        "so": 1,
        "can": 1,
        "serve": 1,
        "long": 1,
        "term": 1,
        "reference": 1
      },
      "createdAt": "2025-10-18T19:38:29.775Z",
      "updatedAt": "2025-10-18T20:42:40.001Z"
    },
    {
      "id": "7c6cc144-b423-4b43-b50a-224daa184c2d",
      "title": "Forest CLI first impression",
      "tags": [
        "forest",
        "automatically",
        "between",
        "cli",
        "connection"
      ],
      "body": "Forest automatically discovers semantic connections between notes using content similarity scoring, creating a knowledge graph without manual linking effort.",
      "tokenCounts": {
        "forest": 2,
        "cli": 1,
        "first": 1,
        "impression": 1,
        "automatically": 1,
        "discover": 1,
        "semantic": 1,
        "connection": 1,
        "between": 1,
        "note": 1,
        "content": 1,
        "similarity": 1,
        "scoring": 1,
        "creating": 1,
        "knowledge": 1,
        "graph": 1,
        "without": 1,
        "manual": 1,
        "linking": 1,
        "effort": 1
      },
      "createdAt": "2025-10-18T19:48:30.042Z",
      "updatedAt": "2025-10-18T19:48:30.042Z"
    },
    {
      "id": "f64f6ef1-5519-4380-a1e0-b1a1582d7e16",
      "title": "Graph-based knowledge management patterns",
      "tags": [
        "knowledge",
        "graphs",
        "pattern",
        "help",
        "around"
      ],
      "body": "Three key patterns emerge in graph-based knowledge systems:\n\n1. Auto-linking reduces cognitive load by suggesting connections rather than requiring manual edge creation\n2. Scoring mechanisms help prioritize which relationships matter most\n3. Graph neighborhoods reveal context around individual nodes\n\nThese patterns support knowledge discovery and help prevent information silos in personal knowledge bases.",
      "tokenCounts": {
        "graph": 3,
        "knowledge": 4,
        "management": 1,
        "pattern": 3,
        "three": 1,
        "key": 1,
        "emerge": 1,
        "system": 1,
        "auto": 1,
        "linking": 1,
        "reduce": 1,
        "cognitive": 1,
        "load": 1,
        "suggesting": 1,
        "connection": 1,
        "rather": 1,
        "than": 1,
        "requiring": 1,
        "manual": 1,
        "edge": 1,
        "creation": 1,
        "scoring": 1,
        "mechanism": 1,
        "help": 2,
        "prioritize": 1,
        "which": 1,
        "relationship": 1,
        "matter": 1,
        "most": 1,
        "neighborhood": 1,
        "reveal": 1,
        "context": 1,
        "around": 1,
        "individual": 1,
        "node": 1,
        "support": 1,
        "discovery": 1,
        "prevent": 1,
        "information": 1,
        "silo": 1,
        "personal": 1,
        "base": 1
      },
      "createdAt": "2025-10-18T19:49:35.057Z",
      "updatedAt": "2025-10-18T20:42:40.002Z"
    },
    {
      "id": "f4c949c1-dfcb-4915-bee2-d56c9aa0da65",
      "title": "Updated Architecture Note",
      "tags": [
        "command",
        "content",
        "edge",
        "graphs",
        "human"
      ],
      "body": "After extensively exploring the Forest CLI tool through hands-on experimentation and systematic testing of its various command-line interfaces, I've developed a comprehensive understanding of its architectural patterns and design philosophy. The system represents a sophisticated approach to personal knowledge management that leverages graph theory and natural language processing to create an intelligent, self-organizing knowledge base.\n\nThe fundamental architecture revolves around nodes (individual notes or ideas) and edges (relationships between those notes). What makes Forest particularly interesting is its dual-edge system: accepted edges which represent confirmed relationships that the user has validated, and suggested edges which are automatically generated by the system based on content analysis and semantic similarity scoring. This creates a hybrid human-AI collaborative model where the machine learning components suggest connections but human judgment remains central to curating the graph structure.\n\nThe scoring mechanism appears to use some form of content similarity algorithm, possibly TF-IDF or embeddings-based cosine similarity, to compute relevance scores between 0.0 and 1.0. I observed thresholds at 0.50 for auto-acceptance and 0.15 for suggestion generation. The system maintains these suggestions in a separate layer, allowing users to review and triage them through the insights command suite. This design choice prevents noise while still surfacing potentially valuable connections that might not be immediately obvious.\n\nFrom a user experience perspective, the CLI surface is well-designed with clear command separation: capture for input, explore for navigation, insights for graph curation, doctor for health monitoring, and read for content retrieval. Each command supports both human-readable text output and machine-parsable JSON, making it suitable for both interactive use and programmatic integration. The auto-tagging feature extracts relevant terms from content, though the tag selection algorithm could potentially be refined as I noticed it sometimes picks less semantically meaningful words.\n\nThe graph neighborhood concept, where explore shows connected nodes at configurable depths, effectively provides context around any given note. This spatial thinking about knowledge - where ideas are not isolated but exist in a web of related concepts - aligns well with how human memory and understanding actually works. The high-degree node detection in the doctor command helps identify hub concepts that tie together multiple threads of thought.\n",
      "tokenCounts": {
        "15": 1,
        "50": 1,
        "updated": 1,
        "architecture": 2,
        "note": 4,
        "after": 1,
        "extensively": 1,
        "exploring": 1,
        "forest": 2,
        "cli": 2,
        "tool": 1,
        "through": 2,
        "hand": 1,
        "experimentation": 1,
        "systematic": 1,
        "testing": 1,
        "its": 3,
        "various": 1,
        "command": 5,
        "line": 1,
        "interface": 1,
        "ve": 1,
        "developed": 1,
        "comprehensive": 1,
        "understanding": 2,
        "architectural": 1,
        "pattern": 1,
        "design": 2,
        "philosophy": 1,
        "system": 4,
        "represent": 2,
        "sophisticated": 1,
        "approach": 1,
        "personal": 1,
        "knowledge": 3,
        "management": 1,
        "leverage": 1,
        "graph": 4,
        "theory": 1,
        "natural": 1,
        "language": 1,
        "processing": 1,
        "create": 2,
        "intelligent": 1,
        "self": 1,
        "organizing": 1,
        "base": 1,
        "fundamental": 1,
        "revolve": 1,
        "around": 2,
        "node": 3,
        "individual": 1,
        "idea": 2,
        "edge": 4,
        "relationship": 2,
        "between": 2,
        "those": 1,
        "what": 1,
        "make": 1,
        "particularly": 1,
        "interesting": 1,
        "dual": 1,
        "accepted": 1,
        "which": 2,
        "confirmed": 1,
        "user": 3,
        "has": 1,
        "validated": 1,
        "suggested": 1,
        "automatically": 1,
        "generated": 1,
        "content": 4,
        "analysis": 1,
        "semantic": 1,
        "similarity": 3,
        "scoring": 2,
        "hybrid": 1,
        "human": 4,
        "ai": 1,
        "collaborative": 1,
        "model": 1,
        "where": 3,
        "machine": 2,
        "learning": 1,
        "component": 1,
        "suggest": 1,
        "connection": 2,
        "judgment": 1,
        "remain": 1,
        "central": 1,
        "curating": 1,
        "structure": 1,
        "mechanism": 1,
        "appear": 1,
        "some": 1,
        "form": 1,
        "algorithm": 2,
        "possibly": 1,
        "tf": 1,
        "idf": 1,
        "embedding": 1,
        "cosine": 1,
        "compute": 1,
        "relevance": 1,
        "score": 1,
        "observed": 1,
        "threshold": 1,
        "auto": 2,
        "acceptance": 1,
        "suggestion": 2,
        "generation": 1,
        "maintain": 1,
        "separate": 1,
        "layer": 1,
        "allowing": 1,
        "review": 1,
        "triage": 1,
        "them": 1,
        "insight": 2,
        "suite": 1,
        "choice": 1,
        "prevent": 1,
        "noise": 1,
        "while": 1,
        "still": 1,
        "surfacing": 1,
        "potentially": 2,
        "valuable": 1,
        "might": 1,
        "immediately": 1,
        "obvious": 1,
        "from": 2,
        "experience": 1,
        "perspective": 1,
        "surface": 1,
        "well": 2,
        "designed": 1,
        "clear": 1,
        "separation": 1,
        "capture": 1,
        "input": 1,
        "explore": 2,
        "navigation": 1,
        "curation": 1,
        "doctor": 2,
        "health": 1,
        "monitoring": 1,
        "read": 1,
        "retrieval": 1,
        "each": 1,
        "support": 1,
        "both": 2,
        "readable": 1,
        "text": 1,
        "output": 1,
        "parsable": 1,
        "json": 1,
        "making": 1,
        "suitable": 1,
        "interactive": 1,
        "programmatic": 1,
        "integration": 1,
        "tagging": 1,
        "feature": 1,
        "extract": 1,
        "relevant": 1,
        "term": 1,
        "though": 1,
        "tag": 1,
        "selection": 1,
        "could": 1,
        "refined": 1,
        "noticed": 1,
        "sometime": 1,
        "pick": 1,
        "less": 1,
        "semantically": 1,
        "meaningful": 1,
        "word": 1,
        "neighborhood": 1,
        "concept": 3,
        "show": 1,
        "connected": 1,
        "configurable": 1,
        "depth": 1,
        "effectively": 1,
        "provide": 1,
        "context": 1,
        "any": 1,
        "given": 1,
        "spatial": 1,
        "thinking": 1,
        "about": 1,
        "isolated": 1,
        "exist": 1,
        "web": 1,
        "related": 1,
        "align": 1,
        "how": 1,
        "memory": 1,
        "actually": 1,
        "work": 1,
        "high": 1,
        "degree": 1,
        "detection": 1,
        "help": 1,
        "identify": 1,
        "hub": 1,
        "tie": 1,
        "together": 1,
        "multiple": 1,
        "thread": 1,
        "thought": 1
      },
      "createdAt": "2025-10-18T19:52:09.729Z",
      "updatedAt": "2025-10-18T20:42:40.002Z"
    },
    {
      "id": "63e3554b-1439-49d1-a590-ac97f773c35e",
      "title": "TF-IDF vs embedding-based similarity for edge scoring",
      "tags": [
        "embedding",
        "idf",
        "similarity",
        "edge",
        "frequency"
      ],
      "body": "Forest's edge scoring mechanism likely uses either TF-IDF (term frequency-inverse document frequency) for lexical similarity or neural embeddings (like sentence-transformers) for semantic similarity. TF-IDF is lightweight and fast but misses semantic relationships. Embeddings capture meaning better but require more compute. The observed threshold values (auto=0.50, suggest=0.15) suggest tuned hyperparameters for precision/recall balance in knowledge graph construction.",
      "tokenCounts": {
        "15": 1,
        "50": 1,
        "tf": 3,
        "idf": 3,
        "vs": 1,
        "embedding": 3,
        "similarity": 3,
        "edge": 2,
        "scoring": 2,
        "forest": 1,
        "mechanism": 1,
        "likely": 1,
        "uses": 1,
        "either": 1,
        "term": 1,
        "frequency": 2,
        "inverse": 1,
        "document": 1,
        "lexical": 1,
        "neural": 1,
        "like": 1,
        "sentence": 1,
        "transformer": 1,
        "semantic": 2,
        "lightweight": 1,
        "fast": 1,
        "misse": 1,
        "relationship": 1,
        "capture": 1,
        "meaning": 1,
        "better": 1,
        "require": 1,
        "more": 1,
        "compute": 1,
        "observed": 1,
        "threshold": 1,
        "value": 1,
        "auto": 1,
        "suggest": 2,
        "tuned": 1,
        "hyperparameter": 1,
        "precision": 1,
        "recall": 1,
        "balance": 1,
        "knowledge": 1,
        "graph": 1,
        "construction": 1
      },
      "createdAt": "2025-10-18T19:53:00.101Z",
      "updatedAt": "2025-10-18T19:53:00.102Z"
    },
    {
      "id": "360c9484-5ce0-4c21-ac19-48c4062861aa",
      "title": "Testing stdin capture",
      "tags": [
        "stdin",
        "capture",
        "from",
        "test",
        "testing"
      ],
      "body": "This is a test from stdin\n",
      "tokenCounts": {
        "testing": 1,
        "stdin": 2,
        "capture": 1,
        "test": 1,
        "from": 1
      },
      "createdAt": "2025-10-18T19:54:10.472Z",
      "updatedAt": "2025-10-18T19:54:10.473Z"
    },
    {
      "id": "100f87fe-7d57-4318-803d-ad27b050a0ce",
      "title": "Custom tag test",
      "tags": [
        "mytag",
        "customtag",
        "forcedtag"
      ],
      "body": "This note should have custom tags",
      "tokenCounts": {
        "custom": 2,
        "tag": 1,
        "test": 1,
        "note": 1,
        "have": 1,
        "tags": 1
      },
      "createdAt": "2025-10-18T19:54:24.018Z",
      "updatedAt": "2025-10-18T19:54:24.019Z"
    },
    {
      "id": "510a0a7d-e287-4399-bb51-2e8e8ce856ee",
      "title": "No auto-link test",
      "tags": [
        "auto",
        "about",
        "context",
        "graphs",
        "knowledge"
      ],
      "body": "This note talks about graphs and knowledge and context but should not be auto-linked.",
      "tokenCounts": {
        "auto": 2,
        "link": 1,
        "test": 1,
        "note": 1,
        "talk": 1,
        "about": 1,
        "graph": 1,
        "knowledge": 1,
        "context": 1,
        "linked": 1
      },
      "createdAt": "2025-10-18T19:54:30.003Z",
      "updatedAt": "2025-10-18T20:42:40.002Z"
    },
    {
      "id": "e1000673-c6df-4114-bf34-69d94f6dd773",
      "title": "No-auto-link check (CLI)",
      "tags": [
        "auto",
        "check",
        "cli",
        "flag",
        "link"
      ],
      "body": "Quick note to test flag.",
      "tokenCounts": {
        "auto": 1,
        "link": 1,
        "check": 1,
        "cli": 1,
        "quick": 1,
        "note": 1,
        "test": 1,
        "flag": 1
      },
      "createdAt": "2025-10-18T20:16:10.079Z",
      "updatedAt": "2025-10-18T20:16:10.079Z"
    },
    {
      "id": "cc7d6a1a-6664-4fd9-9a25-9a1c06f9ed8a",
      "title": "Preview test note",
      "tags": [
        "note",
        "preview",
        "capture",
        "medium",
        "show"
      ],
      "body": "A medium note to trigger suggestions and show capture preview.",
      "tokenCounts": {
        "preview": 2,
        "test": 1,
        "note": 2,
        "medium": 1,
        "trigger": 1,
        "suggestion": 1,
        "show": 1,
        "capture": 1
      },
      "createdAt": "2025-10-18T20:20:21.741Z",
      "updatedAt": "2025-10-18T20:20:21.742Z"
    },
    {
      "id": "9b46ce97-e017-4b1d-bc5f-020c6fac8f8c",
      "title": "Preview only suggestions",
      "tags": [
        "enough",
        "few",
        "get",
        "just",
        "link"
      ],
      "body": "Just enough words to get a few low-score links.",
      "tokenCounts": {
        "preview": 1,
        "only": 1,
        "suggestion": 1,
        "just": 1,
        "enough": 1,
        "word": 1,
        "get": 1,
        "few": 1,
        "low": 1,
        "score": 1,
        "link": 1
      },
      "createdAt": "2025-10-18T20:25:59.387Z",
      "updatedAt": "2025-10-18T20:25:59.388Z"
    },
    {
      "id": "f267554a-65d8-49f8-99db-2c861765cbaa",
      "title": "JSON capture demo",
      "tags": [
        "automation",
        "capture",
        "demo",
        "hook",
        "json"
      ],
      "body": "Testing machine-readable summary for automation hooks.",
      "tokenCounts": {
        "json": 1,
        "capture": 1,
        "demo": 1,
        "testing": 1,
        "machine": 1,
        "readable": 1,
        "summary": 1,
        "automation": 1,
        "hook": 1
      },
      "createdAt": "2025-10-18T20:26:01.358Z",
      "updatedAt": "2025-10-18T20:26:01.358Z"
    }
  ],
  "edges": [
    {
      "id": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6::e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "sourceId": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "targetId": "e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "status": "accepted",
      "score": 0.4949999999999999,
      "metadata": {
        "components": {
          "tagOverlap": 0.5,
          "tokenSimilarity": 0.5333333333333332,
          "titleSimilarity": 0.3333333333333333
        }
      },
      "createdAt": "2025-10-18T13:34:38.429Z",
      "updatedAt": "2025-10-18T18:25:28.195Z"
    },
    {
      "id": "72dd9220-f6d2-4047-8de6-50db1fbbb44c::e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "sourceId": "72dd9220-f6d2-4047-8de6-50db1fbbb44c",
      "targetId": "e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "status": "accepted",
      "score": 0.4812023906765357,
      "metadata": {
        "components": {
          "tagOverlap": 1,
          "tokenSimilarity": 0.38533731779422614,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T13:34:55.265Z",
      "updatedAt": "2025-10-18T18:26:55.358Z"
    },
    {
      "id": "72dd9220-f6d2-4047-8de6-50db1fbbb44c::9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "sourceId": "72dd9220-f6d2-4047-8de6-50db1fbbb44c",
      "targetId": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "status": "accepted",
      "score": 0.5052891295379082,
      "metadata": {
        "components": {
          "tagOverlap": 0.5,
          "tokenSimilarity": 0.5504818825631802,
          "titleSimilarity": 0.3333333333333333
        }
      },
      "createdAt": "2025-10-18T13:34:55.267Z",
      "updatedAt": "2025-10-18T18:15:10.703Z"
    },
    {
      "id": "b82e4d51-2518-44aa-9c82-5f622ab8448b::e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "sourceId": "b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "targetId": "e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "status": "accepted",
      "score": 0.48973665961010276,
      "metadata": {
        "components": {
          "tagOverlap": 1,
          "tokenSimilarity": 0.31622776601683794,
          "titleSimilarity": 0.3333333333333333
        }
      },
      "createdAt": "2025-10-18T15:12:36.642Z",
      "updatedAt": "2025-10-18T18:26:48.977Z"
    },
    {
      "id": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6::b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "sourceId": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "targetId": "b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "status": "accepted",
      "score": 0.333113883008419,
      "metadata": {
        "components": {
          "tagOverlap": 0.5,
          "tokenSimilarity": 0.26352313834736496,
          "titleSimilarity": 0.3333333333333333
        }
      },
      "createdAt": "2025-10-18T15:12:36.643Z",
      "updatedAt": "2025-10-18T18:26:59.253Z"
    },
    {
      "id": "72dd9220-f6d2-4047-8de6-50db1fbbb44c::b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "sourceId": "72dd9220-f6d2-4047-8de6-50db1fbbb44c",
      "targetId": "b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "status": "accepted",
      "score": 0.30222329678670934,
      "metadata": {
        "components": {
          "tagOverlap": 1,
          "tokenSimilarity": 0.08703882797784893,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T15:12:36.644Z",
      "updatedAt": "2025-10-18T18:27:36.669Z"
    },
    {
      "id": "8d122297-fab5-4087-b5cf-d2135f6ec547::9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "sourceId": "8d122297-fab5-4087-b5cf-d2135f6ec547",
      "targetId": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "status": "accepted",
      "score": 0.3778370211348439,
      "metadata": {
        "components": {
          "tagOverlap": 0.5,
          "tokenSimilarity": 0.3380617018914066,
          "titleSimilarity": 0.3333333333333333
        }
      },
      "createdAt": "2025-10-18T15:12:41.761Z",
      "updatedAt": "2025-10-18T18:26:58.546Z"
    },
    {
      "id": "c94809ee-4d02-4be6-a556-86f7a49a13d7::e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "sourceId": "c94809ee-4d02-4be6-a556-86f7a49a13d7",
      "targetId": "e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "status": "accepted",
      "score": 0.31196773353931867,
      "metadata": {
        "components": {
          "tagOverlap": 1,
          "tokenSimilarity": 0.10327955589886445,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T15:12:50.837Z",
      "updatedAt": "2025-10-18T18:27:36.669Z"
    },
    {
      "id": "72dd9220-f6d2-4047-8de6-50db1fbbb44c::c94809ee-4d02-4be6-a556-86f7a49a13d7",
      "sourceId": "72dd9220-f6d2-4047-8de6-50db1fbbb44c",
      "targetId": "c94809ee-4d02-4be6-a556-86f7a49a13d7",
      "status": "accepted",
      "score": 0.42908860173871277,
      "metadata": {
        "components": {
          "tagOverlap": 1,
          "tokenSimilarity": 0.29848100289785456,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T15:12:50.838Z",
      "updatedAt": "2025-10-18T18:26:56.958Z"
    },
    {
      "id": "b82e4d51-2518-44aa-9c82-5f622ab8448b::c94809ee-4d02-4be6-a556-86f7a49a13d7",
      "sourceId": "b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "targetId": "c94809ee-4d02-4be6-a556-86f7a49a13d7",
      "status": "accepted",
      "score": 0.29898979485566357,
      "metadata": {
        "components": {
          "tagOverlap": 1,
          "tokenSimilarity": 0.08164965809277261,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T15:12:50.839Z",
      "updatedAt": "2025-10-18T18:27:36.669Z"
    },
    {
      "id": "7178ccee-21a6-4179-94b5-03281b04f4da::9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "sourceId": "7178ccee-21a6-4179-94b5-03281b04f4da",
      "targetId": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "status": "accepted",
      "score": 0.38284609690826527,
      "metadata": {
        "components": {
          "tagOverlap": 0.5,
          "tokenSimilarity": 0.3464101615137754,
          "titleSimilarity": 0.3333333333333333
        }
      },
      "createdAt": "2025-10-18T15:12:53.083Z",
      "updatedAt": "2025-10-18T18:26:57.848Z"
    },
    {
      "id": "7178ccee-21a6-4179-94b5-03281b04f4da::8d122297-fab5-4087-b5cf-d2135f6ec547",
      "sourceId": "7178ccee-21a6-4179-94b5-03281b04f4da",
      "targetId": "8d122297-fab5-4087-b5cf-d2135f6ec547",
      "status": "accepted",
      "score": 0.504939015319192,
      "metadata": {
        "components": {
          "tagOverlap": 1,
          "tokenSimilarity": 0.34156502553198664,
          "titleSimilarity": 0.3333333333333333
        }
      },
      "createdAt": "2025-10-18T15:12:53.084Z",
      "updatedAt": "2025-10-18T18:15:10.703Z"
    },
    {
      "id": "715edecc-753c-40ed-b24b-be34f7ef5da3::b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "sourceId": "715edecc-753c-40ed-b24b-be34f7ef5da3",
      "targetId": "b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "status": "accepted",
      "score": 0.20664965809277258,
      "metadata": {
        "components": {
          "tagOverlap": 0.5,
          "tokenSimilarity": 0.13608276348795434,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T18:13:23.178Z",
      "updatedAt": "2025-10-18T18:27:36.669Z"
    },
    {
      "id": "715edecc-753c-40ed-b24b-be34f7ef5da3::c94809ee-4d02-4be6-a556-86f7a49a13d7",
      "sourceId": "715edecc-753c-40ed-b24b-be34f7ef5da3",
      "targetId": "c94809ee-4d02-4be6-a556-86f7a49a13d7",
      "status": "accepted",
      "score": 0.20500000000000002,
      "metadata": {
        "components": {
          "tagOverlap": 0.5,
          "tokenSimilarity": 0.13333333333333333,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T18:13:23.178Z",
      "updatedAt": "2025-10-18T18:27:36.669Z"
    },
    {
      "id": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6::c94809ee-4d02-4be6-a556-86f7a49a13d7",
      "sourceId": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "targetId": "c94809ee-4d02-4be6-a556-86f7a49a13d7",
      "status": "accepted",
      "score": 0.2799193338482967,
      "metadata": {
        "components": {
          "tagOverlap": 0.5,
          "tokenSimilarity": 0.25819888974716115,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T18:13:23.178Z",
      "updatedAt": "2025-10-18T18:27:36.669Z"
    },
    {
      "id": "72dd9220-f6d2-4047-8de6-50db1fbbb44c::8d122297-fab5-4087-b5cf-d2135f6ec547",
      "sourceId": "72dd9220-f6d2-4047-8de6-50db1fbbb44c",
      "targetId": "8d122297-fab5-4087-b5cf-d2135f6ec547",
      "status": "accepted",
      "score": 0.24540168418367886,
      "metadata": {
        "components": {
          "tagOverlap": 0,
          "tokenSimilarity": 0.3256694736394648,
          "titleSimilarity": 0.3333333333333333
        }
      },
      "createdAt": "2025-10-18T18:13:23.178Z",
      "updatedAt": "2025-10-18T18:27:36.669Z"
    },
    {
      "id": "5826a944-e126-4aa5-9edd-8116f15601c7::5c200fa7-aa46-4bc6-86af-69fc00ef8a82",
      "sourceId": "5826a944-e126-4aa5-9edd-8116f15601c7",
      "targetId": "5c200fa7-aa46-4bc6-86af-69fc00ef8a82",
      "status": "accepted",
      "score": 0.24337285414411264,
      "metadata": {
        "components": {
          "tagOverlap": 0.3333333333333333,
          "tokenSimilarity": 0.2667325346846322,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T18:13:23.178Z",
      "updatedAt": "2025-10-18T18:27:36.669Z"
    },
    {
      "id": "5826a944-e126-4aa5-9edd-8116f15601c7::6b46833c-58b7-48b2-80ce-52402c92ef46",
      "sourceId": "5826a944-e126-4aa5-9edd-8116f15601c7",
      "targetId": "6b46833c-58b7-48b2-80ce-52402c92ef46",
      "status": "accepted",
      "score": 0.2681818181818182,
      "metadata": {
        "components": {
          "tagOverlap": 0,
          "tokenSimilarity": 0.36363636363636365,
          "titleSimilarity": 0.3333333333333333
        }
      },
      "createdAt": "2025-10-18T18:13:23.178Z",
      "updatedAt": "2025-10-18T18:27:36.669Z"
    },
    {
      "id": "5a31df67-80f2-4744-b464-07ff6ec88d25::8d122297-fab5-4087-b5cf-d2135f6ec547",
      "sourceId": "5a31df67-80f2-4744-b464-07ff6ec88d25",
      "targetId": "8d122297-fab5-4087-b5cf-d2135f6ec547",
      "status": "accepted",
      "score": 0.2116581052478165,
      "metadata": {
        "components": {
          "tagOverlap": 0.2,
          "tokenSimilarity": 0.18609684207969418,
          "titleSimilarity": 0.3333333333333333
        }
      },
      "createdAt": "2025-10-18T18:13:23.178Z",
      "updatedAt": "2025-10-18T18:27:36.669Z"
    },
    {
      "id": "3cb2066a-c3b6-4d8c-b931-77e6abf0c055::b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "sourceId": "3cb2066a-c3b6-4d8c-b931-77e6abf0c055",
      "targetId": "b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "status": "suggested",
      "score": 0.28447907631135677,
      "metadata": {
        "components": {
          "tagOverlap": 0.2,
          "tokenSimilarity": 0.24646089322152145,
          "titleSimilarity": 0.5773502691896258
        }
      },
      "createdAt": "2025-10-18T19:37:03.768Z",
      "updatedAt": "2025-10-18T19:37:03.768Z"
    },
    {
      "id": "69d5f575-5678-4b6d-83cb-838902a175a8::9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "sourceId": "69d5f575-5678-4b6d-83cb-838902a175a8",
      "targetId": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "status": "suggested",
      "score": 0.4017016975426285,
      "metadata": {
        "components": {
          "tagOverlap": 0.4,
          "tokenSimilarity": 0.4306673789223443,
          "titleSimilarity": 0.2886751345948129
        }
      },
      "createdAt": "2025-10-18T19:38:29.793Z",
      "updatedAt": "2025-10-18T19:38:29.793Z"
    },
    {
      "id": "69d5f575-5678-4b6d-83cb-838902a175a8::72dd9220-f6d2-4047-8de6-50db1fbbb44c",
      "sourceId": "69d5f575-5678-4b6d-83cb-838902a175a8",
      "targetId": "72dd9220-f6d2-4047-8de6-50db1fbbb44c",
      "status": "suggested",
      "score": 0.30212867456410947,
      "metadata": {
        "components": {
          "tagOverlap": 0.2,
          "tokenSimilarity": 0.34804567395814595,
          "titleSimilarity": 0.2886751345948129
        }
      },
      "createdAt": "2025-10-18T19:38:29.794Z",
      "updatedAt": "2025-10-18T19:38:29.794Z"
    },
    {
      "id": "b82e4d51-2518-44aa-9c82-5f622ab8448b::f64f6ef1-5519-4380-a1e0-b1a1582d7e16",
      "sourceId": "b82e4d51-2518-44aa-9c82-5f622ab8448b",
      "targetId": "f64f6ef1-5519-4380-a1e0-b1a1582d7e16",
      "status": "accepted",
      "score": 0.24783792910020144,
      "metadata": {
        "components": {
          "tagOverlap": 0.2,
          "tokenSimilarity": 0.25756109818496586,
          "titleSimilarity": 0.2886751345948129
        }
      },
      "createdAt": "2025-10-18T19:49:35.084Z",
      "updatedAt": "2025-10-18T19:53:32.353Z"
    },
    {
      "id": "510a0a7d-e287-4399-bb51-2e8e8ce856ee::e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "sourceId": "510a0a7d-e287-4399-bb51-2e8e8ce856ee",
      "targetId": "e70f6e2c-b2bb-425b-8f3b-64b1e3b4a0ba",
      "status": "suggested",
      "score": 0.2648344622118299,
      "metadata": {
        "components": {
          "tagOverlap": 0.2,
          "tokenSimilarity": 0.35805743701971643,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T19:54:30.024Z",
      "updatedAt": "2025-10-18T19:54:30.024Z"
    },
    {
      "id": "510a0a7d-e287-4399-bb51-2e8e8ce856ee::9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "sourceId": "510a0a7d-e287-4399-bb51-2e8e8ce856ee",
      "targetId": "9b7faf2d-fa86-4e7f-a971-68f9f8078fb6",
      "status": "suggested",
      "score": 0.31483446221182987,
      "metadata": {
        "components": {
          "tagOverlap": 0.4,
          "tokenSimilarity": 0.35805743701971643,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T19:54:30.025Z",
      "updatedAt": "2025-10-18T19:54:30.025Z"
    },
    {
      "id": "510a0a7d-e287-4399-bb51-2e8e8ce856ee::72dd9220-f6d2-4047-8de6-50db1fbbb44c",
      "sourceId": "510a0a7d-e287-4399-bb51-2e8e8ce856ee",
      "targetId": "72dd9220-f6d2-4047-8de6-50db1fbbb44c",
      "status": "suggested",
      "score": 0.2983512063154147,
      "metadata": {
        "components": {
          "tagOverlap": 0.2,
          "tokenSimilarity": 0.4139186771923578,
          "titleSimilarity": 0
        }
      },
      "createdAt": "2025-10-18T19:54:30.026Z",
      "updatedAt": "2025-10-18T19:54:30.026Z"
    },
    {
      "id": "510a0a7d-e287-4399-bb51-2e8e8ce856ee::e1000673-c6df-4114-bf34-69d94f6dd773",
      "sourceId": "510a0a7d-e287-4399-bb51-2e8e8ce856ee",
      "targetId": "e1000673-c6df-4114-bf34-69d94f6dd773",
      "status": "suggested",
      "score": 0.4085545208634977,
      "metadata": {
        "components": {
          "tagOverlap": 0.1111111111111111,
          "tokenSimilarity": 0.49029033784546,
          "titleSimilarity": 0.5773502691896258
        }
      },
      "createdAt": "2025-10-18T20:16:10.100Z",
      "updatedAt": "2025-10-18T20:16:10.100Z"
    }
  ]
}